# commands to debug various items
$TV ../../../bin/scr_index -a --prefix /g/g0/${USER}/packages/scr-dist/install/examples --check scr.2010-10-29_16:06:16.1015976.36 &

$TV /g/g0/${USER}/packages/scr-dist/install/bin/scr_rebuild_xor -a 4 1 2_of_4_in_0.xor 1_of_4_in_0.xor 3_of_4_in_0.xor 4_of_4_in_0.xor &

# build the dist tarball
setenv configopts "--with-scr-config-file=/etc/scr.conf --with-yogrt --with-mysql --with-gcs=/usr/global/tools/gcs"
setenv CFLAGS "-g -O0"
setenv scrversion "scr-1.1-8"
cd ~/packages/scr
make distclean
./autogen.sh
./configure --prefix=/usr/local/tools/scr-1.1 $configopts
make dist

# check that a direct build works
make

# unzip the dist tarball, configure, make, make install
rm -rf ../scr-dist
mkdir ../scr-dist
mv ${scrversion}.tar.gz ../scr-dist/.
cd ../scr-dist
tar -zxf ${scrversion}.tar.gz
cd ${scrversion}
./configure --prefix=/g/g0/${USER}/packages/scr-dist/install $configopts
make
make install

# cd to examples directory, and check that build of test programs works
cd /g/g0/${USER}/packages/scr-dist/install/share/scr/examples
setenv OPT "-g -O0"
make

# get an allocation
mxterm 4 32 120

# set up initial enviroment for testing
setenv scrbin "../../../bin"
setenv jobid `${scrbin}/scr_env --jobid`
echo $jobid
setenv downnode `${scrbin}/scr_glob_hosts -n 1 -h "$SLURM_NODELIST"`
echo $downnode
setenv prefix_files "flush.scr halt.scr nodes.scr"

setenv SCR_PREFIX `pwd`

#setenv TV /usr/global/tools/totalview/v/totalview.8X.9.9-1/bin/totalview
#setenv TV /usr/global/tools/totalview/v/totalview.8X.8.0-4/bin/totalview
setenv TV totalview
setenv LD_LIBRARY_PATH /g/g0/${USER}/packages/scr-dist/install/lib
setenv SCR_FETCH 0
setenv SCR_FLUSH 0
setenv SCR_DEBUG 1
setenv SCR_LOG_ENABLE 0
setenv SCR_JOB_NAME testing_job

setenv SCR_CONF_FILE ~/myscr.conf

srun -n4 -N4 /bin/rm -rf /tmp/${USER}/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/${USER}/scr.$jobid
rm -f ${prefix_files}

# check that a run works
srun -n4 -N4 ./test_api

# check that the next run bails out due to SCR_FINALIZE_CALLED
srun -n4 -N4 ./test_api

# remove halt file and run again, check that checkpoints continue where last run left off
${scrbin}/scr_halt -r `pwd`
srun -n4 -N4 ./test_api

# delete all files from /ssd on rank 0, remove halt file, run again, check that rebuild works
rm -rf /tmp/${USER}/scr.$jobid
rm -rf /ssd/${USER}/scr.$jobid
${scrbin}/scr_halt -r `pwd`
srun -n4 -N4 ./test_api

# delete latest checkpoint directory from two nodes, remove halt file, run again,
# check that rebuild works for older checkpoint
srun -n2 -N2 /bin/rm -rf /ssd/${USER}/scr.$jobid/index.2/dataset.18
srun -n2 -N2 /bin/rm -rf /tmp/${USER}/scr.$jobid/index.2/dataset.18
srun -n2 -N2 /bin/rm -rf /tmp/${USER}/scr.$jobid/index.0/dataset.18
${scrbin}/scr_halt -r `pwd`
srun -n4 -N4 ./test_api

# delete all files from all nodes, remove halt file, run again, check that run starts over
srun -n4 -N4 /bin/rm -rf /ssd/${USER}/scr.$jobid
srun -n4 -N4 /bin/rm -rf /tmp/${USER}/scr.$jobid
${scrbin}/scr_halt -r `pwd`
srun -n4 -N4 ./test_api

# clear the cache and control directory
srun -n4 -N4 /bin/rm -rf /tmp/${USER}/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/${USER}/scr.$jobid
rm -f ${prefix_files}

# check that scr_cntl_dir returns good values
${scrbin}/scr_cntl_dir
${scrbin}/scr_cntl_dir --base
${scrbin}/scr_cntl_dir --cache
${scrbin}/scr_cntl_dir --cache --base

# check that scr_list_down_nodes returns good values
${scrbin}/scr_list_down_nodes
${scrbin}/scr_list_down_nodes --down $downnode
${scrbin}/scr_list_down_nodes --reason --down $downnode
setenv SCR_EXCLUDE_NODES $downnode
${scrbin}/scr_list_down_nodes
${scrbin}/scr_list_down_nodes --reason
unsetenv SCR_EXCLUDE_NODES

# check that scr_halt seems to work
${scrbin}/scr_halt --list `pwd`; sleep 5
${scrbin}/scr_halt --before '3pm today' `pwd`; sleep 5
${scrbin}/scr_halt --after '4pm today' `pwd`; sleep 5
${scrbin}/scr_halt --seconds 1200 `pwd`; sleep 5
${scrbin}/scr_halt --unset-before `pwd`; sleep 5
${scrbin}/scr_halt --unset-after `pwd`; sleep 5
${scrbin}/scr_halt --unset-seconds `pwd`; sleep 5
${scrbin}/scr_halt `pwd`; sleep 5
${scrbin}/scr_halt --checkpoints 5 `pwd`; sleep 5
${scrbin}/scr_halt --unset-checkpoints `pwd`; sleep 5
${scrbin}/scr_halt --unset-reason `pwd`; sleep 5
${scrbin}/scr_halt --remove `pwd`

# check that scr_env seems to work
${scrbin}/scr_env --user
${scrbin}/scr_env --jobid
${scrbin}/scr_env --nodes
${scrbin}/scr_env --down

# check that scr_prerun works
${scrbin}/scr_prerun

# check that scr_postrun works (w/ empty cache)
${scrbin}/scr_postrun

# clear the cache, make a new run, and check that scr_postrun drains successfully (no rebuild)
srun -n4 -N4 /bin/rm -rf /tmp/${USER}/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/${USER}/scr.$jobid
srun -n4 -N4 ./test_api
${scrbin}/scr_postrun
${scrbin}/scr_index --list

# fake a down node via EXCLUDE_NODES and redo above test (check that rebuild during drain works)
setenv SCR_EXCLUDE_NODES $downnode
${scrbin}/scr_halt -r `pwd`
srun -n4 -N4 ./test_api
${scrbin}/scr_postrun
unsetenv SCR_EXCLUDE_NODES
${scrbin}/scr_index --list

# delete all files, enable fetch, run again, check that fetch succeeds
srun -n4 -N4 /bin/rm -rf /tmp/${USER}/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/${USER}/scr.$jobid
${scrbin}/scr_halt -r `pwd`
setenv SCR_FETCH 1
srun -n4 -N4 ./test_api
${scrbin}/scr_index --list

# delete all files from 2 nodes, remove halt file, run again, check that distribute fails but fetch succeeds
srun -n2 -N2 /bin/rm -rf /tmp/${USER}/scr.$jobid
srun -n2 -N2 /bin/rm -rf /ssd/${USER}/scr.$jobid
${scrbin}/scr_halt -r `pwd`
srun -n4 -N4 ./test_api
${scrbin}/scr_index --list

# delete all files, corrupt file on disc, run again, check that fetch of current fails but old succeeds
srun -n4 -N4 /bin/rm -rf /tmp/${USER}/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/${USER}/scr.$jobid
vi -b /g/g0/${USER}/packages/scr-dist/install/share/scr/examples/scr.current/rank_2.ckpt
${scrbin}/scr_halt -r `pwd`
srun -n4 -N4 ./test_api
${scrbin}/scr_index --list

# remove halt file, enable flush, run again and check that flush succeeds and that postrun realizes that
${scrbin}/scr_halt -r `pwd`
setenv SCR_FLUSH 10
srun -n4 -N4 ./test_api
${scrbin}/scr_postrun
${scrbin}/scr_index --list

# clear cache and check that scr_srun works
srun -n4 -N4 /bin/rm -rf /tmp/${USER}/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/${USER}/scr.$jobid
rm -f ${prefix_files}
${scrbin}/scr_srun -n4 -N4 ./test_api
${scrbin}/scr_index --list

