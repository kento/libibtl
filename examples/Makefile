# Makefile.in generated by automake 1.10.1 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/main
pkglibdir = $(libdir)/main
pkgincludedir = $(includedir)/main
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-suse-linux-gnu
host_triplet = x86_64-suse-linux-gnu
bin_PROGRAMS = rdma_server_test$(EXEEXT) rdma_client_test$(EXEEXT) \
	rdma_client_latency$(EXEEXT) rdma_server_latency$(EXEEXT) \
	rdma_client_silent$(EXEEXT) rdma_server_silent$(EXEEXT) \
	rdma_server_silent_overlap$(EXEEXT)
subdir = examples
DIST_COMMON = README $(dist_examples_DATA) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(examplesdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = rdma_client_latency-list_queue.$(OBJEXT) \
	rdma_client_latency-rdma_ppool.$(OBJEXT) \
	rdma_client_latency-rdma_client.$(OBJEXT) \
	rdma_client_latency-rdma_server.$(OBJEXT) \
	rdma_client_latency-rdma_common.$(OBJEXT) \
	rdma_client_latency-common.$(OBJEXT) \
	rdma_client_latency-ibtls.$(OBJEXT)
am_rdma_client_latency_OBJECTS =  \
	rdma_client_latency-rdma_client_latency.$(OBJEXT) \
	$(am__objects_1)
rdma_client_latency_OBJECTS = $(am_rdma_client_latency_OBJECTS)
am__DEPENDENCIES_1 =
rdma_client_latency_DEPENDENCIES = $(am__DEPENDENCIES_1)
rdma_client_latency_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(rdma_client_latency_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_2 = rdma_client_silent-list_queue.$(OBJEXT) \
	rdma_client_silent-rdma_ppool.$(OBJEXT) \
	rdma_client_silent-rdma_client.$(OBJEXT) \
	rdma_client_silent-rdma_server.$(OBJEXT) \
	rdma_client_silent-rdma_common.$(OBJEXT) \
	rdma_client_silent-common.$(OBJEXT) \
	rdma_client_silent-ibtls.$(OBJEXT)
am_rdma_client_silent_OBJECTS =  \
	rdma_client_silent-rdma_client_silent.$(OBJEXT) \
	$(am__objects_2)
rdma_client_silent_OBJECTS = $(am_rdma_client_silent_OBJECTS)
rdma_client_silent_DEPENDENCIES = $(am__DEPENDENCIES_1)
rdma_client_silent_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(rdma_client_silent_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_3 = rdma_client_test-list_queue.$(OBJEXT) \
	rdma_client_test-rdma_ppool.$(OBJEXT) \
	rdma_client_test-rdma_client.$(OBJEXT) \
	rdma_client_test-rdma_server.$(OBJEXT) \
	rdma_client_test-rdma_common.$(OBJEXT) \
	rdma_client_test-common.$(OBJEXT) \
	rdma_client_test-ibtls.$(OBJEXT)
am_rdma_client_test_OBJECTS =  \
	rdma_client_test-rdma_client_test.$(OBJEXT) $(am__objects_3)
rdma_client_test_OBJECTS = $(am_rdma_client_test_OBJECTS)
rdma_client_test_DEPENDENCIES = $(am__DEPENDENCIES_1)
rdma_client_test_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(rdma_client_test_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_4 = rdma_server_latency-list_queue.$(OBJEXT) \
	rdma_server_latency-rdma_ppool.$(OBJEXT) \
	rdma_server_latency-rdma_client.$(OBJEXT) \
	rdma_server_latency-rdma_server.$(OBJEXT) \
	rdma_server_latency-rdma_common.$(OBJEXT) \
	rdma_server_latency-common.$(OBJEXT) \
	rdma_server_latency-ibtls.$(OBJEXT)
am_rdma_server_latency_OBJECTS =  \
	rdma_server_latency-rdma_server_latency.$(OBJEXT) \
	$(am__objects_4)
rdma_server_latency_OBJECTS = $(am_rdma_server_latency_OBJECTS)
rdma_server_latency_DEPENDENCIES = $(am__DEPENDENCIES_1)
rdma_server_latency_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(rdma_server_latency_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_5 = rdma_server_silent-list_queue.$(OBJEXT) \
	rdma_server_silent-rdma_ppool.$(OBJEXT) \
	rdma_server_silent-rdma_client.$(OBJEXT) \
	rdma_server_silent-rdma_server.$(OBJEXT) \
	rdma_server_silent-rdma_common.$(OBJEXT) \
	rdma_server_silent-common.$(OBJEXT) \
	rdma_server_silent-ibtls.$(OBJEXT)
am_rdma_server_silent_OBJECTS =  \
	rdma_server_silent-rdma_server_silent.$(OBJEXT) \
	$(am__objects_5)
rdma_server_silent_OBJECTS = $(am_rdma_server_silent_OBJECTS)
rdma_server_silent_DEPENDENCIES = $(am__DEPENDENCIES_1)
rdma_server_silent_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(rdma_server_silent_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_6 = rdma_server_silent_overlap-list_queue.$(OBJEXT) \
	rdma_server_silent_overlap-rdma_ppool.$(OBJEXT) \
	rdma_server_silent_overlap-rdma_client.$(OBJEXT) \
	rdma_server_silent_overlap-rdma_server.$(OBJEXT) \
	rdma_server_silent_overlap-rdma_common.$(OBJEXT) \
	rdma_server_silent_overlap-common.$(OBJEXT) \
	rdma_server_silent_overlap-ibtls.$(OBJEXT)
am_rdma_server_silent_overlap_OBJECTS = rdma_server_silent_overlap-rdma_server_silent_overlap.$(OBJEXT) \
	$(am__objects_6)
rdma_server_silent_overlap_OBJECTS =  \
	$(am_rdma_server_silent_overlap_OBJECTS)
rdma_server_silent_overlap_DEPENDENCIES = $(am__DEPENDENCIES_1)
rdma_server_silent_overlap_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_7 = rdma_server_test-list_queue.$(OBJEXT) \
	rdma_server_test-rdma_ppool.$(OBJEXT) \
	rdma_server_test-rdma_client.$(OBJEXT) \
	rdma_server_test-rdma_server.$(OBJEXT) \
	rdma_server_test-rdma_common.$(OBJEXT) \
	rdma_server_test-common.$(OBJEXT) \
	rdma_server_test-ibtls.$(OBJEXT)
am_rdma_server_test_OBJECTS =  \
	rdma_server_test-rdma_server_test.$(OBJEXT) $(am__objects_7)
rdma_server_test_OBJECTS = $(am_rdma_server_test_OBJECTS)
rdma_server_test_DEPENDENCIES = $(am__DEPENDENCIES_1)
rdma_server_test_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(rdma_server_test_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(rdma_client_latency_SOURCES) $(rdma_client_silent_SOURCES) \
	$(rdma_client_test_SOURCES) $(rdma_server_latency_SOURCES) \
	$(rdma_server_silent_SOURCES) \
	$(rdma_server_silent_overlap_SOURCES) \
	$(rdma_server_test_SOURCES)
DIST_SOURCES = $(rdma_client_latency_SOURCES) \
	$(rdma_client_silent_SOURCES) $(rdma_client_test_SOURCES) \
	$(rdma_server_latency_SOURCES) $(rdma_server_silent_SOURCES) \
	$(rdma_server_silent_overlap_SOURCES) \
	$(rdma_server_test_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
dist_examplesDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dist_examples_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/usr2/11D37048/lib/libibtl/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/usr2/11D37048/lib/libibtl/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/usr2/11D37048/lib/libibtl/missing --run autoconf
AUTOHEADER = ${SHELL} /home/usr2/11D37048/lib/libibtl/missing --run autoheader
AUTOMAKE = ${SHELL} /home/usr2/11D37048/lib/libibtl/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/x86_64-suse-linux/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/usr2/11D37048/lib/libibtl/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = main
PACKAGE_BUGREPORT = kent@matsulab.is.titech.ac.jp
PACKAGE_NAME = main
PACKAGE_STRING = main 0.0.1
PACKAGE_TARNAME = main
PACKAGE_VERSION = 0.0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.0.1
abs_builddir = /home/usr2/11D37048/lib/libibtl/examples
abs_srcdir = /home/usr2/11D37048/lib/libibtl/examples
abs_top_builddir = /home/usr2/11D37048/lib/libibtl
abs_top_srcdir = /home/usr2/11D37048/lib/libibtl
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-suse-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = suse
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-suse-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = suse
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/usr2/11D37048/lib/libibtl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/usr2/11D37048/usr/tools/libibtls
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SRC_DIR = ../src
INCLUDE_DIR = ../include
TARGET = $(SRC_DIR)/list_queue.c	$(INCLUDE_DIR)/list_queue.h $(SRC_DIR)/rdma_ppool.c $(INCLUDE_DIR)/rdma_ppool.h $(SRC_DIR)/rdma_client.c $(INCLUDE_DIR)/rdma_client.h $(SRC_DIR)/rdma_server.c $(INCLUDE_DIR)/rdma_server.h $(SRC_DIR)/rdma_common.c $(INCLUDE_DIR)/rdma_common.h $(SRC_DIR)/common.c $(INCLUDE_DIR)/common.h $(SRC_DIR)/ibtls.c $(INCLUDE_DIR)/ibtls.h 
rdma_client_test_SOURCES = rdma_client_test.c $(TARGET)
rdma_client_test_CFLAGS = -I$(INCLUDE_DIR)
rdma_client_test_LDADD = ${LDFLAGS} -lrdmacm -lpthread
rdma_server_test_SOURCES = rdma_server_test.c $(TARGET)
rdma_server_test_CFLAGS = -I$(INCLUDE_DIR)
rdma_server_test_LDADD = ${LDFLAGS} -lrdmacm -lpthread
rdma_client_latency_SOURCES = rdma_client_latency.c $(TARGET)
rdma_client_latency_CFLAGS = -I$(INCLUDE_DIR)
rdma_client_latency_LDADD = ${LDFLAGS} -lrdmacm -lpthread
rdma_server_latency_SOURCES = rdma_server_latency.c $(TARGET)
rdma_server_latency_CFLAGS = -I$(INCLUDE_DIR)
rdma_server_latency_LDADD = ${LDFLAGS} -lrdmacm -lpthread
rdma_client_silent_SOURCES = rdma_client_silent.c $(TARGET)
rdma_client_silent_CFLAGS = -I$(INCLUDE_DIR)
rdma_client_silent_LDADD = ${LDFLAGS} -lrdmacm -lpthread
rdma_server_silent_SOURCES = rdma_server_silent.c $(TARGET)
rdma_server_silent_CFLAGS = -I$(INCLUDE_DIR)
rdma_server_silent_LDADD = ${LDFLAGS} -lrdmacm -lpthread
rdma_server_silent_overlap_SOURCES = rdma_server_silent_overlap.c $(TARGET)
rdma_server_silent_overlap_CFLAGS = -I$(INCLUDE_DIR)
rdma_server_silent_overlap_LDADD = ${LDFLAGS} -lrdmacm -lpthread

# ================
# For installation
# ================
examplesdir = $(exec_prefix)/examples
dist_examples_DATA = \
	rdma_client_test.c \
	rdma_server_test.c \
	rdma_client_silent.c \
	rdma_server_silent.c \
	rdma_client_latency.c \
	rdma_server_latency.c \
	rdma_server_silent_overlap.c

EXTRA_DIST = makefile.example
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  examples/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
rdma_client_latency$(EXEEXT): $(rdma_client_latency_OBJECTS) $(rdma_client_latency_DEPENDENCIES) 
	@rm -f rdma_client_latency$(EXEEXT)
	$(rdma_client_latency_LINK) $(rdma_client_latency_OBJECTS) $(rdma_client_latency_LDADD) $(LIBS)
rdma_client_silent$(EXEEXT): $(rdma_client_silent_OBJECTS) $(rdma_client_silent_DEPENDENCIES) 
	@rm -f rdma_client_silent$(EXEEXT)
	$(rdma_client_silent_LINK) $(rdma_client_silent_OBJECTS) $(rdma_client_silent_LDADD) $(LIBS)
rdma_client_test$(EXEEXT): $(rdma_client_test_OBJECTS) $(rdma_client_test_DEPENDENCIES) 
	@rm -f rdma_client_test$(EXEEXT)
	$(rdma_client_test_LINK) $(rdma_client_test_OBJECTS) $(rdma_client_test_LDADD) $(LIBS)
rdma_server_latency$(EXEEXT): $(rdma_server_latency_OBJECTS) $(rdma_server_latency_DEPENDENCIES) 
	@rm -f rdma_server_latency$(EXEEXT)
	$(rdma_server_latency_LINK) $(rdma_server_latency_OBJECTS) $(rdma_server_latency_LDADD) $(LIBS)
rdma_server_silent$(EXEEXT): $(rdma_server_silent_OBJECTS) $(rdma_server_silent_DEPENDENCIES) 
	@rm -f rdma_server_silent$(EXEEXT)
	$(rdma_server_silent_LINK) $(rdma_server_silent_OBJECTS) $(rdma_server_silent_LDADD) $(LIBS)
rdma_server_silent_overlap$(EXEEXT): $(rdma_server_silent_overlap_OBJECTS) $(rdma_server_silent_overlap_DEPENDENCIES) 
	@rm -f rdma_server_silent_overlap$(EXEEXT)
	$(rdma_server_silent_overlap_LINK) $(rdma_server_silent_overlap_OBJECTS) $(rdma_server_silent_overlap_LDADD) $(LIBS)
rdma_server_test$(EXEEXT): $(rdma_server_test_OBJECTS) $(rdma_server_test_DEPENDENCIES) 
	@rm -f rdma_server_test$(EXEEXT)
	$(rdma_server_test_LINK) $(rdma_server_test_OBJECTS) $(rdma_server_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/rdma_client_latency-common.Po
include ./$(DEPDIR)/rdma_client_latency-ibtls.Po
include ./$(DEPDIR)/rdma_client_latency-list_queue.Po
include ./$(DEPDIR)/rdma_client_latency-rdma_client.Po
include ./$(DEPDIR)/rdma_client_latency-rdma_client_latency.Po
include ./$(DEPDIR)/rdma_client_latency-rdma_common.Po
include ./$(DEPDIR)/rdma_client_latency-rdma_ppool.Po
include ./$(DEPDIR)/rdma_client_latency-rdma_server.Po
include ./$(DEPDIR)/rdma_client_silent-common.Po
include ./$(DEPDIR)/rdma_client_silent-ibtls.Po
include ./$(DEPDIR)/rdma_client_silent-list_queue.Po
include ./$(DEPDIR)/rdma_client_silent-rdma_client.Po
include ./$(DEPDIR)/rdma_client_silent-rdma_client_silent.Po
include ./$(DEPDIR)/rdma_client_silent-rdma_common.Po
include ./$(DEPDIR)/rdma_client_silent-rdma_ppool.Po
include ./$(DEPDIR)/rdma_client_silent-rdma_server.Po
include ./$(DEPDIR)/rdma_client_test-common.Po
include ./$(DEPDIR)/rdma_client_test-ibtls.Po
include ./$(DEPDIR)/rdma_client_test-list_queue.Po
include ./$(DEPDIR)/rdma_client_test-rdma_client.Po
include ./$(DEPDIR)/rdma_client_test-rdma_client_test.Po
include ./$(DEPDIR)/rdma_client_test-rdma_common.Po
include ./$(DEPDIR)/rdma_client_test-rdma_ppool.Po
include ./$(DEPDIR)/rdma_client_test-rdma_server.Po
include ./$(DEPDIR)/rdma_server_latency-common.Po
include ./$(DEPDIR)/rdma_server_latency-ibtls.Po
include ./$(DEPDIR)/rdma_server_latency-list_queue.Po
include ./$(DEPDIR)/rdma_server_latency-rdma_client.Po
include ./$(DEPDIR)/rdma_server_latency-rdma_common.Po
include ./$(DEPDIR)/rdma_server_latency-rdma_ppool.Po
include ./$(DEPDIR)/rdma_server_latency-rdma_server.Po
include ./$(DEPDIR)/rdma_server_latency-rdma_server_latency.Po
include ./$(DEPDIR)/rdma_server_silent-common.Po
include ./$(DEPDIR)/rdma_server_silent-ibtls.Po
include ./$(DEPDIR)/rdma_server_silent-list_queue.Po
include ./$(DEPDIR)/rdma_server_silent-rdma_client.Po
include ./$(DEPDIR)/rdma_server_silent-rdma_common.Po
include ./$(DEPDIR)/rdma_server_silent-rdma_ppool.Po
include ./$(DEPDIR)/rdma_server_silent-rdma_server.Po
include ./$(DEPDIR)/rdma_server_silent-rdma_server_silent.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-common.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-ibtls.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-list_queue.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-rdma_client.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-rdma_common.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-rdma_ppool.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-rdma_server.Po
include ./$(DEPDIR)/rdma_server_silent_overlap-rdma_server_silent_overlap.Po
include ./$(DEPDIR)/rdma_server_test-common.Po
include ./$(DEPDIR)/rdma_server_test-ibtls.Po
include ./$(DEPDIR)/rdma_server_test-list_queue.Po
include ./$(DEPDIR)/rdma_server_test-rdma_client.Po
include ./$(DEPDIR)/rdma_server_test-rdma_common.Po
include ./$(DEPDIR)/rdma_server_test-rdma_ppool.Po
include ./$(DEPDIR)/rdma_server_test-rdma_server.Po
include ./$(DEPDIR)/rdma_server_test-rdma_server_test.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

rdma_client_latency-rdma_client_latency.o: rdma_client_latency.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_client_latency.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_client_latency.Tpo -c -o rdma_client_latency-rdma_client_latency.o `test -f 'rdma_client_latency.c' || echo '$(srcdir)/'`rdma_client_latency.c
	mv -f $(DEPDIR)/rdma_client_latency-rdma_client_latency.Tpo $(DEPDIR)/rdma_client_latency-rdma_client_latency.Po
#	source='rdma_client_latency.c' object='rdma_client_latency-rdma_client_latency.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_client_latency.o `test -f 'rdma_client_latency.c' || echo '$(srcdir)/'`rdma_client_latency.c

rdma_client_latency-rdma_client_latency.obj: rdma_client_latency.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_client_latency.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_client_latency.Tpo -c -o rdma_client_latency-rdma_client_latency.obj `if test -f 'rdma_client_latency.c'; then $(CYGPATH_W) 'rdma_client_latency.c'; else $(CYGPATH_W) '$(srcdir)/rdma_client_latency.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-rdma_client_latency.Tpo $(DEPDIR)/rdma_client_latency-rdma_client_latency.Po
#	source='rdma_client_latency.c' object='rdma_client_latency-rdma_client_latency.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_client_latency.obj `if test -f 'rdma_client_latency.c'; then $(CYGPATH_W) 'rdma_client_latency.c'; else $(CYGPATH_W) '$(srcdir)/rdma_client_latency.c'; fi`

rdma_client_latency-list_queue.o: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-list_queue.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-list_queue.Tpo -c -o rdma_client_latency-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c
	mv -f $(DEPDIR)/rdma_client_latency-list_queue.Tpo $(DEPDIR)/rdma_client_latency-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_client_latency-list_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c

rdma_client_latency-list_queue.obj: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-list_queue.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-list_queue.Tpo -c -o rdma_client_latency-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-list_queue.Tpo $(DEPDIR)/rdma_client_latency-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_client_latency-list_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`

rdma_client_latency-rdma_ppool.o: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_ppool.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_ppool.Tpo -c -o rdma_client_latency-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c
	mv -f $(DEPDIR)/rdma_client_latency-rdma_ppool.Tpo $(DEPDIR)/rdma_client_latency-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_client_latency-rdma_ppool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c

rdma_client_latency-rdma_ppool.obj: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_ppool.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_ppool.Tpo -c -o rdma_client_latency-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-rdma_ppool.Tpo $(DEPDIR)/rdma_client_latency-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_client_latency-rdma_ppool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`

rdma_client_latency-rdma_client.o: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_client.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_client.Tpo -c -o rdma_client_latency-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c
	mv -f $(DEPDIR)/rdma_client_latency-rdma_client.Tpo $(DEPDIR)/rdma_client_latency-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_client_latency-rdma_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c

rdma_client_latency-rdma_client.obj: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_client.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_client.Tpo -c -o rdma_client_latency-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-rdma_client.Tpo $(DEPDIR)/rdma_client_latency-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_client_latency-rdma_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`

rdma_client_latency-rdma_server.o: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_server.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_server.Tpo -c -o rdma_client_latency-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c
	mv -f $(DEPDIR)/rdma_client_latency-rdma_server.Tpo $(DEPDIR)/rdma_client_latency-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_client_latency-rdma_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c

rdma_client_latency-rdma_server.obj: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_server.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_server.Tpo -c -o rdma_client_latency-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-rdma_server.Tpo $(DEPDIR)/rdma_client_latency-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_client_latency-rdma_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`

rdma_client_latency-rdma_common.o: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_common.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_common.Tpo -c -o rdma_client_latency-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c
	mv -f $(DEPDIR)/rdma_client_latency-rdma_common.Tpo $(DEPDIR)/rdma_client_latency-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_client_latency-rdma_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c

rdma_client_latency-rdma_common.obj: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-rdma_common.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-rdma_common.Tpo -c -o rdma_client_latency-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-rdma_common.Tpo $(DEPDIR)/rdma_client_latency-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_client_latency-rdma_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`

rdma_client_latency-common.o: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-common.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-common.Tpo -c -o rdma_client_latency-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c
	mv -f $(DEPDIR)/rdma_client_latency-common.Tpo $(DEPDIR)/rdma_client_latency-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_client_latency-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c

rdma_client_latency-common.obj: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-common.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-common.Tpo -c -o rdma_client_latency-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-common.Tpo $(DEPDIR)/rdma_client_latency-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_client_latency-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`

rdma_client_latency-ibtls.o: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-ibtls.o -MD -MP -MF $(DEPDIR)/rdma_client_latency-ibtls.Tpo -c -o rdma_client_latency-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c
	mv -f $(DEPDIR)/rdma_client_latency-ibtls.Tpo $(DEPDIR)/rdma_client_latency-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_client_latency-ibtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c

rdma_client_latency-ibtls.obj: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -MT rdma_client_latency-ibtls.obj -MD -MP -MF $(DEPDIR)/rdma_client_latency-ibtls.Tpo -c -o rdma_client_latency-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`
	mv -f $(DEPDIR)/rdma_client_latency-ibtls.Tpo $(DEPDIR)/rdma_client_latency-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_client_latency-ibtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_latency_CFLAGS) $(CFLAGS) -c -o rdma_client_latency-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`

rdma_client_silent-rdma_client_silent.o: rdma_client_silent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_client_silent.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_client_silent.Tpo -c -o rdma_client_silent-rdma_client_silent.o `test -f 'rdma_client_silent.c' || echo '$(srcdir)/'`rdma_client_silent.c
	mv -f $(DEPDIR)/rdma_client_silent-rdma_client_silent.Tpo $(DEPDIR)/rdma_client_silent-rdma_client_silent.Po
#	source='rdma_client_silent.c' object='rdma_client_silent-rdma_client_silent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_client_silent.o `test -f 'rdma_client_silent.c' || echo '$(srcdir)/'`rdma_client_silent.c

rdma_client_silent-rdma_client_silent.obj: rdma_client_silent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_client_silent.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_client_silent.Tpo -c -o rdma_client_silent-rdma_client_silent.obj `if test -f 'rdma_client_silent.c'; then $(CYGPATH_W) 'rdma_client_silent.c'; else $(CYGPATH_W) '$(srcdir)/rdma_client_silent.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-rdma_client_silent.Tpo $(DEPDIR)/rdma_client_silent-rdma_client_silent.Po
#	source='rdma_client_silent.c' object='rdma_client_silent-rdma_client_silent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_client_silent.obj `if test -f 'rdma_client_silent.c'; then $(CYGPATH_W) 'rdma_client_silent.c'; else $(CYGPATH_W) '$(srcdir)/rdma_client_silent.c'; fi`

rdma_client_silent-list_queue.o: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-list_queue.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-list_queue.Tpo -c -o rdma_client_silent-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c
	mv -f $(DEPDIR)/rdma_client_silent-list_queue.Tpo $(DEPDIR)/rdma_client_silent-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_client_silent-list_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c

rdma_client_silent-list_queue.obj: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-list_queue.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-list_queue.Tpo -c -o rdma_client_silent-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-list_queue.Tpo $(DEPDIR)/rdma_client_silent-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_client_silent-list_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`

rdma_client_silent-rdma_ppool.o: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_ppool.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_ppool.Tpo -c -o rdma_client_silent-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c
	mv -f $(DEPDIR)/rdma_client_silent-rdma_ppool.Tpo $(DEPDIR)/rdma_client_silent-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_client_silent-rdma_ppool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c

rdma_client_silent-rdma_ppool.obj: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_ppool.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_ppool.Tpo -c -o rdma_client_silent-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-rdma_ppool.Tpo $(DEPDIR)/rdma_client_silent-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_client_silent-rdma_ppool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`

rdma_client_silent-rdma_client.o: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_client.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_client.Tpo -c -o rdma_client_silent-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c
	mv -f $(DEPDIR)/rdma_client_silent-rdma_client.Tpo $(DEPDIR)/rdma_client_silent-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_client_silent-rdma_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c

rdma_client_silent-rdma_client.obj: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_client.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_client.Tpo -c -o rdma_client_silent-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-rdma_client.Tpo $(DEPDIR)/rdma_client_silent-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_client_silent-rdma_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`

rdma_client_silent-rdma_server.o: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_server.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_server.Tpo -c -o rdma_client_silent-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c
	mv -f $(DEPDIR)/rdma_client_silent-rdma_server.Tpo $(DEPDIR)/rdma_client_silent-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_client_silent-rdma_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c

rdma_client_silent-rdma_server.obj: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_server.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_server.Tpo -c -o rdma_client_silent-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-rdma_server.Tpo $(DEPDIR)/rdma_client_silent-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_client_silent-rdma_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`

rdma_client_silent-rdma_common.o: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_common.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_common.Tpo -c -o rdma_client_silent-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c
	mv -f $(DEPDIR)/rdma_client_silent-rdma_common.Tpo $(DEPDIR)/rdma_client_silent-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_client_silent-rdma_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c

rdma_client_silent-rdma_common.obj: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-rdma_common.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-rdma_common.Tpo -c -o rdma_client_silent-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-rdma_common.Tpo $(DEPDIR)/rdma_client_silent-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_client_silent-rdma_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`

rdma_client_silent-common.o: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-common.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-common.Tpo -c -o rdma_client_silent-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c
	mv -f $(DEPDIR)/rdma_client_silent-common.Tpo $(DEPDIR)/rdma_client_silent-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_client_silent-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c

rdma_client_silent-common.obj: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-common.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-common.Tpo -c -o rdma_client_silent-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-common.Tpo $(DEPDIR)/rdma_client_silent-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_client_silent-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`

rdma_client_silent-ibtls.o: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-ibtls.o -MD -MP -MF $(DEPDIR)/rdma_client_silent-ibtls.Tpo -c -o rdma_client_silent-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c
	mv -f $(DEPDIR)/rdma_client_silent-ibtls.Tpo $(DEPDIR)/rdma_client_silent-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_client_silent-ibtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c

rdma_client_silent-ibtls.obj: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -MT rdma_client_silent-ibtls.obj -MD -MP -MF $(DEPDIR)/rdma_client_silent-ibtls.Tpo -c -o rdma_client_silent-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`
	mv -f $(DEPDIR)/rdma_client_silent-ibtls.Tpo $(DEPDIR)/rdma_client_silent-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_client_silent-ibtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_silent_CFLAGS) $(CFLAGS) -c -o rdma_client_silent-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`

rdma_client_test-rdma_client_test.o: rdma_client_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_client_test.o -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_client_test.Tpo -c -o rdma_client_test-rdma_client_test.o `test -f 'rdma_client_test.c' || echo '$(srcdir)/'`rdma_client_test.c
	mv -f $(DEPDIR)/rdma_client_test-rdma_client_test.Tpo $(DEPDIR)/rdma_client_test-rdma_client_test.Po
#	source='rdma_client_test.c' object='rdma_client_test-rdma_client_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_client_test.o `test -f 'rdma_client_test.c' || echo '$(srcdir)/'`rdma_client_test.c

rdma_client_test-rdma_client_test.obj: rdma_client_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_client_test.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_client_test.Tpo -c -o rdma_client_test-rdma_client_test.obj `if test -f 'rdma_client_test.c'; then $(CYGPATH_W) 'rdma_client_test.c'; else $(CYGPATH_W) '$(srcdir)/rdma_client_test.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-rdma_client_test.Tpo $(DEPDIR)/rdma_client_test-rdma_client_test.Po
#	source='rdma_client_test.c' object='rdma_client_test-rdma_client_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_client_test.obj `if test -f 'rdma_client_test.c'; then $(CYGPATH_W) 'rdma_client_test.c'; else $(CYGPATH_W) '$(srcdir)/rdma_client_test.c'; fi`

rdma_client_test-list_queue.o: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-list_queue.o -MD -MP -MF $(DEPDIR)/rdma_client_test-list_queue.Tpo -c -o rdma_client_test-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c
	mv -f $(DEPDIR)/rdma_client_test-list_queue.Tpo $(DEPDIR)/rdma_client_test-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_client_test-list_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c

rdma_client_test-list_queue.obj: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-list_queue.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-list_queue.Tpo -c -o rdma_client_test-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-list_queue.Tpo $(DEPDIR)/rdma_client_test-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_client_test-list_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`

rdma_client_test-rdma_ppool.o: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_ppool.o -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_ppool.Tpo -c -o rdma_client_test-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c
	mv -f $(DEPDIR)/rdma_client_test-rdma_ppool.Tpo $(DEPDIR)/rdma_client_test-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_client_test-rdma_ppool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c

rdma_client_test-rdma_ppool.obj: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_ppool.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_ppool.Tpo -c -o rdma_client_test-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-rdma_ppool.Tpo $(DEPDIR)/rdma_client_test-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_client_test-rdma_ppool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`

rdma_client_test-rdma_client.o: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_client.o -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_client.Tpo -c -o rdma_client_test-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c
	mv -f $(DEPDIR)/rdma_client_test-rdma_client.Tpo $(DEPDIR)/rdma_client_test-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_client_test-rdma_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c

rdma_client_test-rdma_client.obj: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_client.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_client.Tpo -c -o rdma_client_test-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-rdma_client.Tpo $(DEPDIR)/rdma_client_test-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_client_test-rdma_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`

rdma_client_test-rdma_server.o: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_server.o -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_server.Tpo -c -o rdma_client_test-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c
	mv -f $(DEPDIR)/rdma_client_test-rdma_server.Tpo $(DEPDIR)/rdma_client_test-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_client_test-rdma_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c

rdma_client_test-rdma_server.obj: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_server.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_server.Tpo -c -o rdma_client_test-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-rdma_server.Tpo $(DEPDIR)/rdma_client_test-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_client_test-rdma_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`

rdma_client_test-rdma_common.o: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_common.o -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_common.Tpo -c -o rdma_client_test-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c
	mv -f $(DEPDIR)/rdma_client_test-rdma_common.Tpo $(DEPDIR)/rdma_client_test-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_client_test-rdma_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c

rdma_client_test-rdma_common.obj: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-rdma_common.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-rdma_common.Tpo -c -o rdma_client_test-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-rdma_common.Tpo $(DEPDIR)/rdma_client_test-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_client_test-rdma_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`

rdma_client_test-common.o: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-common.o -MD -MP -MF $(DEPDIR)/rdma_client_test-common.Tpo -c -o rdma_client_test-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c
	mv -f $(DEPDIR)/rdma_client_test-common.Tpo $(DEPDIR)/rdma_client_test-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_client_test-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c

rdma_client_test-common.obj: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-common.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-common.Tpo -c -o rdma_client_test-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-common.Tpo $(DEPDIR)/rdma_client_test-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_client_test-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`

rdma_client_test-ibtls.o: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-ibtls.o -MD -MP -MF $(DEPDIR)/rdma_client_test-ibtls.Tpo -c -o rdma_client_test-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c
	mv -f $(DEPDIR)/rdma_client_test-ibtls.Tpo $(DEPDIR)/rdma_client_test-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_client_test-ibtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c

rdma_client_test-ibtls.obj: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -MT rdma_client_test-ibtls.obj -MD -MP -MF $(DEPDIR)/rdma_client_test-ibtls.Tpo -c -o rdma_client_test-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`
	mv -f $(DEPDIR)/rdma_client_test-ibtls.Tpo $(DEPDIR)/rdma_client_test-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_client_test-ibtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_client_test_CFLAGS) $(CFLAGS) -c -o rdma_client_test-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`

rdma_server_latency-rdma_server_latency.o: rdma_server_latency.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_server_latency.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_server_latency.Tpo -c -o rdma_server_latency-rdma_server_latency.o `test -f 'rdma_server_latency.c' || echo '$(srcdir)/'`rdma_server_latency.c
	mv -f $(DEPDIR)/rdma_server_latency-rdma_server_latency.Tpo $(DEPDIR)/rdma_server_latency-rdma_server_latency.Po
#	source='rdma_server_latency.c' object='rdma_server_latency-rdma_server_latency.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_server_latency.o `test -f 'rdma_server_latency.c' || echo '$(srcdir)/'`rdma_server_latency.c

rdma_server_latency-rdma_server_latency.obj: rdma_server_latency.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_server_latency.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_server_latency.Tpo -c -o rdma_server_latency-rdma_server_latency.obj `if test -f 'rdma_server_latency.c'; then $(CYGPATH_W) 'rdma_server_latency.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_latency.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-rdma_server_latency.Tpo $(DEPDIR)/rdma_server_latency-rdma_server_latency.Po
#	source='rdma_server_latency.c' object='rdma_server_latency-rdma_server_latency.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_server_latency.obj `if test -f 'rdma_server_latency.c'; then $(CYGPATH_W) 'rdma_server_latency.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_latency.c'; fi`

rdma_server_latency-list_queue.o: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-list_queue.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-list_queue.Tpo -c -o rdma_server_latency-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c
	mv -f $(DEPDIR)/rdma_server_latency-list_queue.Tpo $(DEPDIR)/rdma_server_latency-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_latency-list_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c

rdma_server_latency-list_queue.obj: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-list_queue.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-list_queue.Tpo -c -o rdma_server_latency-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-list_queue.Tpo $(DEPDIR)/rdma_server_latency-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_latency-list_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`

rdma_server_latency-rdma_ppool.o: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_ppool.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_ppool.Tpo -c -o rdma_server_latency-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c
	mv -f $(DEPDIR)/rdma_server_latency-rdma_ppool.Tpo $(DEPDIR)/rdma_server_latency-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_latency-rdma_ppool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c

rdma_server_latency-rdma_ppool.obj: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_ppool.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_ppool.Tpo -c -o rdma_server_latency-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-rdma_ppool.Tpo $(DEPDIR)/rdma_server_latency-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_latency-rdma_ppool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`

rdma_server_latency-rdma_client.o: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_client.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_client.Tpo -c -o rdma_server_latency-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c
	mv -f $(DEPDIR)/rdma_server_latency-rdma_client.Tpo $(DEPDIR)/rdma_server_latency-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_latency-rdma_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c

rdma_server_latency-rdma_client.obj: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_client.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_client.Tpo -c -o rdma_server_latency-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-rdma_client.Tpo $(DEPDIR)/rdma_server_latency-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_latency-rdma_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`

rdma_server_latency-rdma_server.o: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_server.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_server.Tpo -c -o rdma_server_latency-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c
	mv -f $(DEPDIR)/rdma_server_latency-rdma_server.Tpo $(DEPDIR)/rdma_server_latency-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_latency-rdma_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c

rdma_server_latency-rdma_server.obj: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_server.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_server.Tpo -c -o rdma_server_latency-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-rdma_server.Tpo $(DEPDIR)/rdma_server_latency-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_latency-rdma_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`

rdma_server_latency-rdma_common.o: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_common.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_common.Tpo -c -o rdma_server_latency-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c
	mv -f $(DEPDIR)/rdma_server_latency-rdma_common.Tpo $(DEPDIR)/rdma_server_latency-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_latency-rdma_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c

rdma_server_latency-rdma_common.obj: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-rdma_common.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-rdma_common.Tpo -c -o rdma_server_latency-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-rdma_common.Tpo $(DEPDIR)/rdma_server_latency-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_latency-rdma_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`

rdma_server_latency-common.o: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-common.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-common.Tpo -c -o rdma_server_latency-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c
	mv -f $(DEPDIR)/rdma_server_latency-common.Tpo $(DEPDIR)/rdma_server_latency-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_latency-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c

rdma_server_latency-common.obj: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-common.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-common.Tpo -c -o rdma_server_latency-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-common.Tpo $(DEPDIR)/rdma_server_latency-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_latency-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`

rdma_server_latency-ibtls.o: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-ibtls.o -MD -MP -MF $(DEPDIR)/rdma_server_latency-ibtls.Tpo -c -o rdma_server_latency-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c
	mv -f $(DEPDIR)/rdma_server_latency-ibtls.Tpo $(DEPDIR)/rdma_server_latency-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_latency-ibtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c

rdma_server_latency-ibtls.obj: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -MT rdma_server_latency-ibtls.obj -MD -MP -MF $(DEPDIR)/rdma_server_latency-ibtls.Tpo -c -o rdma_server_latency-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`
	mv -f $(DEPDIR)/rdma_server_latency-ibtls.Tpo $(DEPDIR)/rdma_server_latency-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_latency-ibtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_latency_CFLAGS) $(CFLAGS) -c -o rdma_server_latency-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`

rdma_server_silent-rdma_server_silent.o: rdma_server_silent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_server_silent.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_server_silent.Tpo -c -o rdma_server_silent-rdma_server_silent.o `test -f 'rdma_server_silent.c' || echo '$(srcdir)/'`rdma_server_silent.c
	mv -f $(DEPDIR)/rdma_server_silent-rdma_server_silent.Tpo $(DEPDIR)/rdma_server_silent-rdma_server_silent.Po
#	source='rdma_server_silent.c' object='rdma_server_silent-rdma_server_silent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_server_silent.o `test -f 'rdma_server_silent.c' || echo '$(srcdir)/'`rdma_server_silent.c

rdma_server_silent-rdma_server_silent.obj: rdma_server_silent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_server_silent.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_server_silent.Tpo -c -o rdma_server_silent-rdma_server_silent.obj `if test -f 'rdma_server_silent.c'; then $(CYGPATH_W) 'rdma_server_silent.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_silent.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-rdma_server_silent.Tpo $(DEPDIR)/rdma_server_silent-rdma_server_silent.Po
#	source='rdma_server_silent.c' object='rdma_server_silent-rdma_server_silent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_server_silent.obj `if test -f 'rdma_server_silent.c'; then $(CYGPATH_W) 'rdma_server_silent.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_silent.c'; fi`

rdma_server_silent-list_queue.o: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-list_queue.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-list_queue.Tpo -c -o rdma_server_silent-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c
	mv -f $(DEPDIR)/rdma_server_silent-list_queue.Tpo $(DEPDIR)/rdma_server_silent-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_silent-list_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c

rdma_server_silent-list_queue.obj: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-list_queue.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-list_queue.Tpo -c -o rdma_server_silent-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-list_queue.Tpo $(DEPDIR)/rdma_server_silent-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_silent-list_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`

rdma_server_silent-rdma_ppool.o: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_ppool.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_ppool.Tpo -c -o rdma_server_silent-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c
	mv -f $(DEPDIR)/rdma_server_silent-rdma_ppool.Tpo $(DEPDIR)/rdma_server_silent-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_silent-rdma_ppool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c

rdma_server_silent-rdma_ppool.obj: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_ppool.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_ppool.Tpo -c -o rdma_server_silent-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-rdma_ppool.Tpo $(DEPDIR)/rdma_server_silent-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_silent-rdma_ppool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`

rdma_server_silent-rdma_client.o: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_client.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_client.Tpo -c -o rdma_server_silent-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c
	mv -f $(DEPDIR)/rdma_server_silent-rdma_client.Tpo $(DEPDIR)/rdma_server_silent-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_silent-rdma_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c

rdma_server_silent-rdma_client.obj: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_client.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_client.Tpo -c -o rdma_server_silent-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-rdma_client.Tpo $(DEPDIR)/rdma_server_silent-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_silent-rdma_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`

rdma_server_silent-rdma_server.o: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_server.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_server.Tpo -c -o rdma_server_silent-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c
	mv -f $(DEPDIR)/rdma_server_silent-rdma_server.Tpo $(DEPDIR)/rdma_server_silent-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_silent-rdma_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c

rdma_server_silent-rdma_server.obj: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_server.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_server.Tpo -c -o rdma_server_silent-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-rdma_server.Tpo $(DEPDIR)/rdma_server_silent-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_silent-rdma_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`

rdma_server_silent-rdma_common.o: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_common.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_common.Tpo -c -o rdma_server_silent-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c
	mv -f $(DEPDIR)/rdma_server_silent-rdma_common.Tpo $(DEPDIR)/rdma_server_silent-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_silent-rdma_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c

rdma_server_silent-rdma_common.obj: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-rdma_common.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-rdma_common.Tpo -c -o rdma_server_silent-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-rdma_common.Tpo $(DEPDIR)/rdma_server_silent-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_silent-rdma_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`

rdma_server_silent-common.o: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-common.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-common.Tpo -c -o rdma_server_silent-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c
	mv -f $(DEPDIR)/rdma_server_silent-common.Tpo $(DEPDIR)/rdma_server_silent-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_silent-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c

rdma_server_silent-common.obj: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-common.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-common.Tpo -c -o rdma_server_silent-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-common.Tpo $(DEPDIR)/rdma_server_silent-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_silent-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`

rdma_server_silent-ibtls.o: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-ibtls.o -MD -MP -MF $(DEPDIR)/rdma_server_silent-ibtls.Tpo -c -o rdma_server_silent-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c
	mv -f $(DEPDIR)/rdma_server_silent-ibtls.Tpo $(DEPDIR)/rdma_server_silent-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_silent-ibtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c

rdma_server_silent-ibtls.obj: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -MT rdma_server_silent-ibtls.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent-ibtls.Tpo -c -o rdma_server_silent-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent-ibtls.Tpo $(DEPDIR)/rdma_server_silent-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_silent-ibtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_CFLAGS) $(CFLAGS) -c -o rdma_server_silent-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`

rdma_server_silent_overlap-rdma_server_silent_overlap.o: rdma_server_silent_overlap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_server_silent_overlap.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_server_silent_overlap.Tpo -c -o rdma_server_silent_overlap-rdma_server_silent_overlap.o `test -f 'rdma_server_silent_overlap.c' || echo '$(srcdir)/'`rdma_server_silent_overlap.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_server_silent_overlap.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_server_silent_overlap.Po
#	source='rdma_server_silent_overlap.c' object='rdma_server_silent_overlap-rdma_server_silent_overlap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_server_silent_overlap.o `test -f 'rdma_server_silent_overlap.c' || echo '$(srcdir)/'`rdma_server_silent_overlap.c

rdma_server_silent_overlap-rdma_server_silent_overlap.obj: rdma_server_silent_overlap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_server_silent_overlap.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_server_silent_overlap.Tpo -c -o rdma_server_silent_overlap-rdma_server_silent_overlap.obj `if test -f 'rdma_server_silent_overlap.c'; then $(CYGPATH_W) 'rdma_server_silent_overlap.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_silent_overlap.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_server_silent_overlap.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_server_silent_overlap.Po
#	source='rdma_server_silent_overlap.c' object='rdma_server_silent_overlap-rdma_server_silent_overlap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_server_silent_overlap.obj `if test -f 'rdma_server_silent_overlap.c'; then $(CYGPATH_W) 'rdma_server_silent_overlap.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_silent_overlap.c'; fi`

rdma_server_silent_overlap-list_queue.o: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-list_queue.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-list_queue.Tpo -c -o rdma_server_silent_overlap-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-list_queue.Tpo $(DEPDIR)/rdma_server_silent_overlap-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_silent_overlap-list_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c

rdma_server_silent_overlap-list_queue.obj: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-list_queue.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-list_queue.Tpo -c -o rdma_server_silent_overlap-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-list_queue.Tpo $(DEPDIR)/rdma_server_silent_overlap-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_silent_overlap-list_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`

rdma_server_silent_overlap-rdma_ppool.o: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_ppool.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_ppool.Tpo -c -o rdma_server_silent_overlap-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_ppool.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_silent_overlap-rdma_ppool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c

rdma_server_silent_overlap-rdma_ppool.obj: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_ppool.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_ppool.Tpo -c -o rdma_server_silent_overlap-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_ppool.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_silent_overlap-rdma_ppool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`

rdma_server_silent_overlap-rdma_client.o: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_client.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_client.Tpo -c -o rdma_server_silent_overlap-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_client.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_silent_overlap-rdma_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c

rdma_server_silent_overlap-rdma_client.obj: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_client.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_client.Tpo -c -o rdma_server_silent_overlap-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_client.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_silent_overlap-rdma_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`

rdma_server_silent_overlap-rdma_server.o: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_server.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_server.Tpo -c -o rdma_server_silent_overlap-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_server.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_silent_overlap-rdma_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c

rdma_server_silent_overlap-rdma_server.obj: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_server.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_server.Tpo -c -o rdma_server_silent_overlap-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_server.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_silent_overlap-rdma_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`

rdma_server_silent_overlap-rdma_common.o: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_common.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_common.Tpo -c -o rdma_server_silent_overlap-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_common.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_silent_overlap-rdma_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c

rdma_server_silent_overlap-rdma_common.obj: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-rdma_common.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-rdma_common.Tpo -c -o rdma_server_silent_overlap-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-rdma_common.Tpo $(DEPDIR)/rdma_server_silent_overlap-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_silent_overlap-rdma_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`

rdma_server_silent_overlap-common.o: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-common.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-common.Tpo -c -o rdma_server_silent_overlap-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-common.Tpo $(DEPDIR)/rdma_server_silent_overlap-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_silent_overlap-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c

rdma_server_silent_overlap-common.obj: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-common.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-common.Tpo -c -o rdma_server_silent_overlap-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-common.Tpo $(DEPDIR)/rdma_server_silent_overlap-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_silent_overlap-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`

rdma_server_silent_overlap-ibtls.o: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-ibtls.o -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-ibtls.Tpo -c -o rdma_server_silent_overlap-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c
	mv -f $(DEPDIR)/rdma_server_silent_overlap-ibtls.Tpo $(DEPDIR)/rdma_server_silent_overlap-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_silent_overlap-ibtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c

rdma_server_silent_overlap-ibtls.obj: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -MT rdma_server_silent_overlap-ibtls.obj -MD -MP -MF $(DEPDIR)/rdma_server_silent_overlap-ibtls.Tpo -c -o rdma_server_silent_overlap-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`
	mv -f $(DEPDIR)/rdma_server_silent_overlap-ibtls.Tpo $(DEPDIR)/rdma_server_silent_overlap-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_silent_overlap-ibtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_silent_overlap_CFLAGS) $(CFLAGS) -c -o rdma_server_silent_overlap-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`

rdma_server_test-rdma_server_test.o: rdma_server_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_server_test.o -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_server_test.Tpo -c -o rdma_server_test-rdma_server_test.o `test -f 'rdma_server_test.c' || echo '$(srcdir)/'`rdma_server_test.c
	mv -f $(DEPDIR)/rdma_server_test-rdma_server_test.Tpo $(DEPDIR)/rdma_server_test-rdma_server_test.Po
#	source='rdma_server_test.c' object='rdma_server_test-rdma_server_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_server_test.o `test -f 'rdma_server_test.c' || echo '$(srcdir)/'`rdma_server_test.c

rdma_server_test-rdma_server_test.obj: rdma_server_test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_server_test.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_server_test.Tpo -c -o rdma_server_test-rdma_server_test.obj `if test -f 'rdma_server_test.c'; then $(CYGPATH_W) 'rdma_server_test.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_test.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-rdma_server_test.Tpo $(DEPDIR)/rdma_server_test-rdma_server_test.Po
#	source='rdma_server_test.c' object='rdma_server_test-rdma_server_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_server_test.obj `if test -f 'rdma_server_test.c'; then $(CYGPATH_W) 'rdma_server_test.c'; else $(CYGPATH_W) '$(srcdir)/rdma_server_test.c'; fi`

rdma_server_test-list_queue.o: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-list_queue.o -MD -MP -MF $(DEPDIR)/rdma_server_test-list_queue.Tpo -c -o rdma_server_test-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c
	mv -f $(DEPDIR)/rdma_server_test-list_queue.Tpo $(DEPDIR)/rdma_server_test-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_test-list_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-list_queue.o `test -f '$(SRC_DIR)/list_queue.c' || echo '$(srcdir)/'`$(SRC_DIR)/list_queue.c

rdma_server_test-list_queue.obj: $(SRC_DIR)/list_queue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-list_queue.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-list_queue.Tpo -c -o rdma_server_test-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-list_queue.Tpo $(DEPDIR)/rdma_server_test-list_queue.Po
#	source='$(SRC_DIR)/list_queue.c' object='rdma_server_test-list_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-list_queue.obj `if test -f '$(SRC_DIR)/list_queue.c'; then $(CYGPATH_W) '$(SRC_DIR)/list_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/list_queue.c'; fi`

rdma_server_test-rdma_ppool.o: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_ppool.o -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_ppool.Tpo -c -o rdma_server_test-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c
	mv -f $(DEPDIR)/rdma_server_test-rdma_ppool.Tpo $(DEPDIR)/rdma_server_test-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_test-rdma_ppool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_ppool.o `test -f '$(SRC_DIR)/rdma_ppool.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_ppool.c

rdma_server_test-rdma_ppool.obj: $(SRC_DIR)/rdma_ppool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_ppool.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_ppool.Tpo -c -o rdma_server_test-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-rdma_ppool.Tpo $(DEPDIR)/rdma_server_test-rdma_ppool.Po
#	source='$(SRC_DIR)/rdma_ppool.c' object='rdma_server_test-rdma_ppool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_ppool.obj `if test -f '$(SRC_DIR)/rdma_ppool.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_ppool.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_ppool.c'; fi`

rdma_server_test-rdma_client.o: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_client.o -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_client.Tpo -c -o rdma_server_test-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c
	mv -f $(DEPDIR)/rdma_server_test-rdma_client.Tpo $(DEPDIR)/rdma_server_test-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_test-rdma_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_client.o `test -f '$(SRC_DIR)/rdma_client.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_client.c

rdma_server_test-rdma_client.obj: $(SRC_DIR)/rdma_client.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_client.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_client.Tpo -c -o rdma_server_test-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-rdma_client.Tpo $(DEPDIR)/rdma_server_test-rdma_client.Po
#	source='$(SRC_DIR)/rdma_client.c' object='rdma_server_test-rdma_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_client.obj `if test -f '$(SRC_DIR)/rdma_client.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_client.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_client.c'; fi`

rdma_server_test-rdma_server.o: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_server.o -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_server.Tpo -c -o rdma_server_test-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c
	mv -f $(DEPDIR)/rdma_server_test-rdma_server.Tpo $(DEPDIR)/rdma_server_test-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_test-rdma_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_server.o `test -f '$(SRC_DIR)/rdma_server.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_server.c

rdma_server_test-rdma_server.obj: $(SRC_DIR)/rdma_server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_server.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_server.Tpo -c -o rdma_server_test-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-rdma_server.Tpo $(DEPDIR)/rdma_server_test-rdma_server.Po
#	source='$(SRC_DIR)/rdma_server.c' object='rdma_server_test-rdma_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_server.obj `if test -f '$(SRC_DIR)/rdma_server.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_server.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_server.c'; fi`

rdma_server_test-rdma_common.o: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_common.o -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_common.Tpo -c -o rdma_server_test-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c
	mv -f $(DEPDIR)/rdma_server_test-rdma_common.Tpo $(DEPDIR)/rdma_server_test-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_test-rdma_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_common.o `test -f '$(SRC_DIR)/rdma_common.c' || echo '$(srcdir)/'`$(SRC_DIR)/rdma_common.c

rdma_server_test-rdma_common.obj: $(SRC_DIR)/rdma_common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-rdma_common.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-rdma_common.Tpo -c -o rdma_server_test-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-rdma_common.Tpo $(DEPDIR)/rdma_server_test-rdma_common.Po
#	source='$(SRC_DIR)/rdma_common.c' object='rdma_server_test-rdma_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-rdma_common.obj `if test -f '$(SRC_DIR)/rdma_common.c'; then $(CYGPATH_W) '$(SRC_DIR)/rdma_common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/rdma_common.c'; fi`

rdma_server_test-common.o: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-common.o -MD -MP -MF $(DEPDIR)/rdma_server_test-common.Tpo -c -o rdma_server_test-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c
	mv -f $(DEPDIR)/rdma_server_test-common.Tpo $(DEPDIR)/rdma_server_test-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_test-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-common.o `test -f '$(SRC_DIR)/common.c' || echo '$(srcdir)/'`$(SRC_DIR)/common.c

rdma_server_test-common.obj: $(SRC_DIR)/common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-common.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-common.Tpo -c -o rdma_server_test-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-common.Tpo $(DEPDIR)/rdma_server_test-common.Po
#	source='$(SRC_DIR)/common.c' object='rdma_server_test-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-common.obj `if test -f '$(SRC_DIR)/common.c'; then $(CYGPATH_W) '$(SRC_DIR)/common.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/common.c'; fi`

rdma_server_test-ibtls.o: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-ibtls.o -MD -MP -MF $(DEPDIR)/rdma_server_test-ibtls.Tpo -c -o rdma_server_test-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c
	mv -f $(DEPDIR)/rdma_server_test-ibtls.Tpo $(DEPDIR)/rdma_server_test-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_test-ibtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-ibtls.o `test -f '$(SRC_DIR)/ibtls.c' || echo '$(srcdir)/'`$(SRC_DIR)/ibtls.c

rdma_server_test-ibtls.obj: $(SRC_DIR)/ibtls.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -MT rdma_server_test-ibtls.obj -MD -MP -MF $(DEPDIR)/rdma_server_test-ibtls.Tpo -c -o rdma_server_test-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`
	mv -f $(DEPDIR)/rdma_server_test-ibtls.Tpo $(DEPDIR)/rdma_server_test-ibtls.Po
#	source='$(SRC_DIR)/ibtls.c' object='rdma_server_test-ibtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rdma_server_test_CFLAGS) $(CFLAGS) -c -o rdma_server_test-ibtls.obj `if test -f '$(SRC_DIR)/ibtls.c'; then $(CYGPATH_W) '$(SRC_DIR)/ibtls.c'; else $(CYGPATH_W) '$(srcdir)/$(SRC_DIR)/ibtls.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_examplesDATA: $(dist_examples_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(examplesdir)" || $(MKDIR_P) "$(DESTDIR)$(examplesdir)"
	@list='$(dist_examples_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_examplesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(examplesdir)/$$f'"; \
	  $(dist_examplesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(examplesdir)/$$f"; \
	done

uninstall-dist_examplesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_examples_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(examplesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(examplesdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(examplesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-dist_examplesDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_examplesDATA \
	uninstall-local

.MAKE: install-am install-data-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-hook install-dist_examplesDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_examplesDATA \
	uninstall-local


# Use -hook insted of -local b/c we need to do this AFTER the main install data rule.
install-data-hook:
	$(INSTALL_DATA) makefile.example $(DESTDIR)$(examplesdir)/makefile

uninstall-local:
	-rm -f $(DESTDIR)$(examplesdir)/makefile
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
